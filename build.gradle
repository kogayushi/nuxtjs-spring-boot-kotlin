import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
  id 'org.springframework.boot' version '2.1.6.RELEASE'
  id 'idea'
  id "org.jetbrains.kotlin.jvm" version "1.3.41"
  id "org.jetbrains.kotlin.plugin.spring" version "1.3.41"
  id "com.moowork.node" version "1.3.1"
}
apply plugin: 'io.spring.dependency-management'
group = 'thanks_card.thanks_card'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
  developmentOnly
  runtimeClasspath {
    extendsFrom developmentOnly
  }
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

ext {
  set('springCloudVersion', "Greenwich.SR2")
}

dependencies {
	implementation("org.springframework.boot:spring-boot-starter-oauth2-client")
	implementation("org.springframework.boot:spring-boot-starter-web")
	implementation("com.fasterxml.jackson.module:jackson-module-kotlin")
	implementation("org.jetbrains.kotlin:kotlin-reflect")
	implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	implementation("org.springframework.cloud:spring-cloud-starter-sleuth")
	developmentOnly("org.springframework.boot:spring-boot-devtools")
	runtimeOnly("mysql:mysql-connector-java")
	annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")
	testImplementation("org.springframework.boot:spring-boot-starter-test")

  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'
}

dependencyManagement {
	imports {
		mavenBom("org.springframework.cloud:spring-cloud-dependencies:${property("springCloudVersion")}")
	}
}

sourceSets {
  main {
    java {
      srcDir 'src_back/main/java'
    }
    kotlin {
      srcDir 'src_back/main/kotlin'
    }
    resources {
      srcDir 'src_back/main/resources'
    }
  }
  test {
    java {
      srcDir 'src_back/test/java'
    }
    kotlin {
      srcDir 'src_back/test/kotlin'
    }
    resources {
      srcDir 'src_back/test/resources'
    }
  }
}


task generateNuxtJs(type: NpmTask, dependsOn: 'npm_install') {
  args = ['run', 'build']
}

generateNuxtJs.mustRunAfter compileJava
bootJar.dependsOn generateNuxtJs